ethereum_cl_bootnodes:
  - "{{ hostvars['bootnode-1']['cl_bootnode_fact_enr'] }}"
  - "{{ hostvars['bootnode-1']['ethereum_node_fact_cl_enr'] }}"
  #- "{{ hostvars['teku-geth-1']['ethereum_node_fact_cl_enr'] }}"
  #- "{{ hostvars['lighthouse-geth-1']['ethereum_node_fact_cl_enr'] }}"

ethereum_el_bootnodes:
  - "{{ hostvars['bootnode-1']['ethereum_node_fact_el_enode'] }}"
  #- "{{ hostvars['teku-geth-1']['ethereum_node_fact_el_enode'] }}"
  #- "{{ hostvars['lighthouse-geth-1']['ethereum_node_fact_el_enode'] }}"

ethereum_el_staticpeers:  "{{ (groups['all'] | select('ne', inventory_hostname) | map('extract', hostvars, 'ethereum_node_fact_el_enode') | select('defined') | list) | to_json | from_json }}"

# role: ethpandaops.general.docker_network
# disable ipv6
docker_network_ipam_config: []
docker_network_enable_ipv6: false
global_ipv6_enabled: false
ethereum_node_ipv6_enabled: false

# role: ethpandaops.general.prometheus
prometheus_remote_push_url: "{{ secret_prometheus_remote_write.endpoint }}"
prometheus_remote_write_username: "{{ secret_prometheus_remote_write.username }}"
prometheus_remote_write_password: "{{ secret_prometheus_remote_write.password }}"
prometheus_config: |
  global:
    scrape_interval: 30s
    evaluation_interval: 30s
    scrape_timeout: 10s
    external_labels:
      instance: "{{ ethereum_network_name }}-{{ inventory_hostname }}"
      ip_address: "{{ ansible_host }}"
      network: "{{ ethereum_network_name }}"
      testnet: "{{ ethereum_network_name }}"
      execution_client: "{{ ethereum_node_el }}"
      consensus_client: "{{ ethereum_node_cl }}"
  remote_write:
    - queue_config:
        batch_send_deadline: 5s
        max_backoff: 500ms
        max_samples_per_send: 500
        min_backoff: 50ms
        max_shards: 100
      url: {{ prometheus_remote_push_url }}
      remote_timeout: 10s
      basic_auth:
        username: {{ prometheus_remote_write_username }}
        password: {{ prometheus_remote_write_password }}
  scrape_configs:
    - job_name: "prometheus"
      metrics_path: "/metrics"
      static_configs:
        - targets: ["localhost:9090"]
          labels:
            instance: "{{ inventory_hostname }}"
    - job_name: "node"
      metrics_path: "/metrics"
      static_configs:
        - targets: ["172.17.0.1:9100"]
          labels:
            instance: "{{ inventory_hostname }}"
    - job_name: "exporter"
      metrics_path: "/metrics"
      static_configs:
        - targets: ["ethereum-metrics-exporter:9090"]
          labels:
            instance: "{{ inventory_hostname }}"
    - job_name: "consensus_node"
      scrape_interval: 12s
      metrics_path: "/metrics"
      static_configs:
        - targets: ["{{ vars[ethereum_node_cl + '_container_name'] }}:{{ ethereum_node_cl_ports_metrics }}"]
          labels:
            instance: "{{ inventory_hostname }}"
            supernode: "{{ ethereum_node_cl_supernode_enabled | bool }}"
